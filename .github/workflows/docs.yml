name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check-deploy.outputs.should-deploy }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check deployment conditions
      id: check-deploy
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "should-deploy=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Deployment conditions met"
        else
          echo "should-deploy=false" >> $GITHUB_OUTPUT
          echo "‚ùå Deployment conditions not met (event: ${{ github.event_name }}, ref: ${{ github.ref }})"
        fi

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('docs/requirements.txt', 'requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt
        pip install -e .

    - name: Build documentation
      run: |
        cd docs
        make clean
        make html

    - name: Upload build artifact for review
      uses: actions/upload-artifact@v4
      with:
        name: documentation-build
        path: ./docs/_build/html
        retention-days: 30

    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: steps.check-deploy.outputs.should-deploy == 'true'

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      if: steps.check-deploy.outputs.should-deploy == 'true'
      with:
        path: ./docs/_build/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.should-deploy == 'true'
    steps:
    - name: Debug deployment context
      run: |
        echo "üîç Deployment Debug Information"
        echo "Event name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        echo "Actor: ${{ github.actor }}"
        echo "Should deploy: ${{ needs.build.outputs.should-deploy }}"

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
